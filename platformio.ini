[platformio]
default_envs = generator

[common]
platform = linux_x86_64
build_flags = 
	-std=gnu++17
build_unflags = 
	-std=gnu++11

[env:generator]
extends = common
build_type = release
src_filter = +<generator/>
build_flags = 
	-O3
	-D DEBUGGING=0
	${common.build_flags}
build_unflags =
	${common.build_unflags}

[env:latin_example]
extends = common
build_type = release
src_filter = +<latin_example/>
build_flags = 
	-O3
	-D DEBUGGING=0
	${common.build_flags}
build_unflags =
	${common.build_unflags}

[env:glyphs_test]
extends = common
build_type = release
src_filter = +<glyphs_test/>
build_flags = 
	-O3
	-D DEBUGGING=0
	${common.build_flags}
build_unflags =
	${common.build_unflags}

[env:glyphs_proof]
extends = common
build_type = debug
src_filter = +<glyphs_proof/>
build_flags = 
	-g -Og
    -fno-inline
	-D DEBUGGING=1
	${common.build_flags}
build_unflags =
	${common.build_unflags}

[env:glyphs_debug]
extends = common
build_type = release
src_filter = +<glyphs_test/>
build_flags = 
	-g -Og
	-fno-inline
	-D DEBUGGING=1
	${common.build_flags}
build_unflags =
	${common.build_unflags}

[env:generator_debug]
extends = common
build_type = debug
src_filter = +<generator/>
build_flags = 
	-g -Og
	-fno-inline
	-D DEBUGGING=1
	-D USE_VALGRIND=on
	${common.build_flags}
build_unflags =
	${common.build_unflags}

[env:trial_debug]
extends = common
build_type = debug
src_filter = +<trial/>
build_flags = 
	-g -Og
	-fno-inline
	-D DEBUGGING=1
	-D TEST_APP=1
	-D USE_VALGRIND=on
	${common.build_flags}
build_unflags =
	${common.build_unflags}

[env:trial_test]
extends = common
build_type = debug
src_filter = +<trial/>
lib_compat_mode = off
build_flags = 
	-g -Og
	-fno-inline
	-pthread
	-D DEBUGGING=1
	-D TESTING=1
	-D TEST_APP=1
	-D USE_VALGRIND=on
	${common.build_flags}
build_unflags =
	${common.build_unflags}
lib_deps = google/googletest@^1.10.0
